切片：
  go 的切片是比数组更灵活的数据结构，可以按照需要，增长或者缩小。
  
  切片拥有长度和容量
  切片的长度就是它所包含的元素个数。
  切片的容量是从它的第一个元素开始数，到其底层数组元素末尾的个数。
  切片 s 的长度和容量可通过表达式 len(s) 和 cap(s) 来获取。
  
  package main

  import "fmt"

  func main() {
    // 创建一个整型切片
    // 其长度和容量都是8个元素
    slice := make([]int, 8)
    fmt.Printf("slice的长度是%d,容量是%d\n", len(slice), cap(slice))

    // 创建一个整型切片
    // 其长度为5个元素，容量为8个元素
    slice2 := make([]int, 5, 8)
    fmt.Printf("slice2的长度是%d,容量是%d", len(slice2), cap(slice2))
  }
  运行结果：
    slice的长度是8,容量是8
    slice2的长度是5,容量是8

定义切片的时候，go不允许容量比长度小，否则会报错#####
